---
import HeaderLink from '@/components/HeaderLink.astro'
import Search from '@/components/Search.astro'
import { SOCIAL_NETWORKS } from '@/data/SocialNetworks'
import { BurgerMenu } from '@/components/BurgerMenu'
---

<div id="top" />

<header id="header">
	<nav>
		<BurgerMenu>
			<HeaderLink href='/'>
				<div class="size-8 bg-[url(/myself.jpg)] bg-cover bg-center rounded-full" />
				About Me
			</HeaderLink>
			<HeaderLink href='/posts' icon="ri:discuss-fill">
				Articles
			</HeaderLink>
			<HeaderLink href='/projects' icon="ri:github-fill">
				Projects
			</HeaderLink>
		</BurgerMenu>
		
		<div class="grow" />

		{SOCIAL_NETWORKS.map(network => (
			<HeaderLink
				href={network.url}
				target='_blank'
				title={network.name}
				aria-label={network.name}
				icon={network.icon}
			/>
		))}

		<Search />
	</nav>
</header>

<style>
	#header {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		width: 100%;
		z-index: 50;
		@apply bg-gradient-to-b from-black/50 to-transparent;

		@apply transition-all duration-200;
	}

	#header.floating {
		@apply md:top-4;
		@apply bg-gradient-to-b from-transparent to-transparent;
	}

	nav, menu {
		@apply flex items-center gap-2 md:gap-6;
	}

	#header > nav {
		position: relative;
		border: 0;
		@apply font-semibold text-lg;
		@apply sm:max-w-2xl md:max-w-6xl;
		@apply mx-auto px-4 py-4 md:px-8;
		@apply shadow-none;
		@apply transition-all;
	}

	#header.floating > nav {
		padding: 1rem;
		@apply shadow-xl rounded-xl max-md:rounded-t-none;
		@apply backdrop-blur bg-black/50;
	}

	#header > nav::after {
		z-index: -10;
		content: "";
		position: absolute;
		inset: -1rem;
		@apply border-b md:border border-transparent;
		@apply rounded-xl max-md:rounded-t-none;
		@apply transition-all duration-300;
	}

	#header.floating > nav::after {
		inset: 0;
		@apply border-slate-300/80;
	}
</style>

<script>
	const top = document.querySelector('#top')
	if (top) {
		const observer = new IntersectionObserver((entries) => {
			document.querySelector('#header')?.classList.toggle('floating', !entries[0]?.isIntersecting)
		}, {
			root: null,
			//rootMargin: ' 15% 0px 0% 0px ',
			threshold: 1
		})
		observer.observe(top)
	}
</script>